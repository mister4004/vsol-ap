name: Build Android App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Install Android SDK Command Line Tools
      run: |
        mkdir -p $HOME/android-sdk/cmdline-tools
        curl -o commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip commandlinetools.zip -d $HOME/android-sdk/cmdline-tools
        mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
        yes | sdkmanager --licenses
        sdkmanager --install "build-tools;34.0.0" "platform-tools" "platforms;android-34"

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Set executable permissions for Gradlew
      run: chmod +x ./gradlew

    - name: List Gradle Dependencies
      run: ./gradlew dependencies > dependencies.txt

    - name: Upload Dependencies Report
      uses: actions/upload-artifact@v3
      with:
        name: Gradle Dependencies
        path: dependencies.txt

    - name: Clean and Build with Gradle
      run: ./gradlew clean assembleDebug

    - name: Verify APK version
      run: |
        export PATH=$HOME/android-sdk/build-tools/34.0.0:$PATH
        aapt dump badging app/build/outputs/apk/debug/*.apk | grep versionName

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: APK
        path: app/build/outputs/apk/debug/*.apk
